mutation upgradeDeck(
  $deckId: Int!
) {
  deck: rangers_upgrade_deck(args: {
    deck_id: $deckId,
    upgrade_data: {}
  }) {
    id
    next_deck_id
  }
}

mutation setDeckCampaign(
  $deckId: Int!,
  $campaignId: Int!
) {
  campaign: rangers_set_campaign_deck(args: {
    deck_id: $deckId,
    new_campaign_id: $campaignId
  }) {
    id
  }
}

mutation removeDeckCampaign(
  $deckId: Int!,
  $campaignId: Int!
) {
  campaign: rangers_remove_campaign_deck(args: {
    deck_id: $deckId
    old_campaign_id: $campaignId
  }) {
    id
  }
}

query getMyDecks(
  $userId: String!
) {
  decks: rangers_deck(
    where: {
      user_id: { _eq: $userId }
      _or: [
        {
          published: { _is_null: true }
        },
        {
          published: { _eq: false }
        }
      ]
    }
  ) {
    ...Deck
  }
}

query getDeck(
  $deckId: Int!
) {
  deck: rangers_deck_by_pk(id: $deckId) {
    ...Deck
  }
}

mutation createDeck(
  $name: String!,
  $foc: Int!,
  $fit: Int!,
  $awa: Int!,
  $spi: Int!,
  $meta: jsonb!,
  $slots: jsonb!,
  $extraSlots: jsonb!,
  $description: String,
  $tabooSetId: String,
) {
  deck: insert_rangers_deck_one(
    object: {
      name: $name
      foc: $foc
      fit: $fit
      awa: $awa
      spi: $spi
      meta: $meta
      slots: $slots
      extra_slots: $extraSlots
      description: $description
      taboo_set_id: $tabooSetId
    }
  ) {
    ...Deck
  }
}

mutation deleteDeck(
  $id: Int!
) {
  delete_rangers_deck_by_pk(id: $id) {
    id
  }
}

mutation saveDeck(
  $id: Int!,
  $name: String!,
  $foc: Int!,
  $fit: Int!,
  $awa: Int!,
  $spi: Int!,
  $meta: jsonb!,
  $slots: jsonb!,
  $sideSlots: jsonb!,
  $extraSlots: jsonb!,
) {
  update_rangers_deck_by_pk(
    pk_columns: { id: $id }
    _set: {
      name: $name,
      foc: $foc,
      fit: $fit,
      awa: $awa,
      spi: $spi,
      meta: $meta,
      slots: $slots
      side_slots: $sideSlots,
      extra_slots: $extraSlots,
    }
  ) {
    ...Deck
  }
}

mutation saveDeckTabooSet(
  $id: Int!,
  $tabooSetId: String
) {
  update_rangers_deck_by_pk(
    pk_columns: { id: $id }
    _set: {
      taboo_set_id: $tabooSetId
    }
  ) {
    ...Deck
  }
}
